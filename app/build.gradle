apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.ben-manes.versions'
apply from: '../buildsystem/quality.gradle'
apply from: '../buildsystem/jacoco.gradle'

android {
  compileSdkVersion versions.compileSdk
  buildToolsVersion versions.buildTools

  defaultConfig {
    applicationId "com.romansavin.fallingwords"
    minSdkVersion versions.minSdk
    targetSdkVersion versions.targetSdk
    versionCode versions.code
    versionName versions.name

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      // Enables code coverage with Jacoco only for instrumentation tests.
      // Coverage for JVM tests done by buildsystem/jacoco.gradle.
      testCoverageEnabled true
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      // Enables code coverage with Jacoco only for instrumentation tests.
      // Coverage for JVM tests done by buildsystem/jacoco.gradle.
      testCoverageEnabled true
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    warningsAsErrors true
    abortOnError true

    disable 'GoogleAppIndexingWarning', 'AllowBackup', 'UnusedResources'
  }

  packagingOptions {
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
}

dependencies {
  compile libraries.rxJava
  compile libraries.rxLint
  compile libraries.rxAndroid
  compile libraries.rxBinding

  compile libraries.gson

  apt libraries.autoValue
  provided libraries.autoValue
  apt libraries.autoValueGson
  provided libraries.autoValueGson

  compile libraries.supportAnnotations
  compile libraries.supportAppCompat

  compile libraries.butterKnife
  apt libraries.butterKnifeCompiler

  compile libraries.timber

  retrolambdaConfig libraries.retrolambda

  // Developer tools (Developer Settings)
  debugCompile libraries.leakCanary
  releaseCompile libraries.leakCanaryNoOp

  testCompile libraries.junit
  testCompile libraries.mockitoCore
  testCompile libraries.assertJ

  androidTestCompile(libraries.espresso, {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}

configurations.all {
  resolutionStrategy {
    // Force our version of support-annotations
    force libraries.supportAnnotations
  }
}
